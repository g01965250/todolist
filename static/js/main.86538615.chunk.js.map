{"version":3,"sources":["components/todolist/components/Edit.js","components/todolist/components/List.js","components/todolist/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Edit","setData","useState","inputValue","setInputValue","console","log","className","onChange","e","target","value","onClick","prev","text","isComplete","List","data","map","item","index","d","_index","finishtodo","stopPropagation","filter","deletedata","Todolist","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAyBeA,EAvBF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,QACd,EAAuCC,mBAAS,IAAhD,mBAAQC,EAAR,KAAqBC,EAArB,KAQA,OADAC,QAAQC,IAAI,aAAaH,GAEvB,gCACE,qBAAKI,UAAU,aAAf,sBACA,uBACEC,SAAU,SAACC,GAAD,OAAKL,EAAcK,EAAEC,OAAOC,QACtCA,MAAOR,EACPI,UAAU,YAEZ,wBAAQK,QAdO,WAEjBX,GAAQ,SAACY,GAAD,4BAAcA,GAAd,CAAoB,CAAEC,KAAMX,EAAYY,YAAY,SAY7BR,UAAU,SAAvC,mBCqDSS,EA7CF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMhB,EAAc,EAAdA,QAgBrB,OADAI,QAAQC,IAAI,OAAOW,GAElB,qBAAKV,UAAU,eAAf,SAEEU,EAAKC,KAAI,SAACC,EAAMC,GACf,OACC,sBACER,QAAS,kBApBG,SAACQ,GACjBnB,EAAQgB,EAAKC,KAAI,SAACG,EAAGC,GAItB,OAHOF,IAAUE,IAChBD,EAAEN,YAAcM,EAAEN,YAEZM,MAeaE,CAAWH,IAC3Bb,UAAWY,EAAKJ,WAAa,eAAiB,OAF/C,UAKEI,EAAKL,KACN,sBACEF,QAAS,SAACH,GACVA,EAAEe,kBAlBS,SAACJ,GACnBnB,EAAQgB,EAAKQ,QAAO,SAACJ,EAAGC,GAAJ,QAAiBF,IAAUE,OAkBxCI,CAAWN,IAEZb,UAAU,SALX,iBAHKa,SC7BGO,G,MAjBE,WACf,MAA0BzB,mBAAS,IAAnC,mBAAOe,EAAP,KAAchB,EAAd,KAEA,OACE,sBAAKM,UAAU,UAAf,UACE,cAAC,EAAD,CAAMN,QAASA,IAEbgB,EAAKW,OAAS,GACd,cAAC,EAAD,CACEX,KAAMA,EACNhB,QAASA,SCJJ4B,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86538615.chunk.js","sourcesContent":["import {useState} from 'react'\r\n\r\nconst Edit = ({ setData }) =>{\r\n  const [ inputValue , setInputValue ] = useState('')\r\n  \r\n  const updateData = () =>{\r\n    // TODO tip 2\r\n    setData((prev) => [...prev, { text: inputValue, isComplete: false }])\r\n  }\r\n\r\n  console.log('inputValue',inputValue);\r\n  return (\r\n    <div>\r\n      <div className='list-title'>Todolist</div>\r\n      <input\r\n        onChange={(e)=>setInputValue(e.target.value)} \r\n        value={inputValue} \r\n        className='addtodo'\r\n      />\r\n      <button onClick={updateData} className='addbut'>+</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Edit","/* \t\r\n\r\n\t\r\n\r\nconst List = ({listdata}) =>{\r\n\r\nconsole.log('listdata,',listdata);\r\n\r\n\treturn <div className='list-wrapper'>\r\n\t\t{\r\n\t\t\tlistdata.map(item =>\r\n\t\t\t\t\r\n\t\t\t\t\t<div className='list'>{item.todoinput}\r\n\t\t\t\t\t<span className='remove'>X</span>\r\n\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\r\n\t</div>\r\n}\r\n\r\n\r\n\r\nexport default List */\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst List = ({ data, setData }) => {\r\n\r\n\tconst finishtodo = (index) => {\r\n    setData(data.map((d, _index) => {\r\n      if (index === _index) {\r\n\t\t\t\td.isComplete = !d.isComplete\r\n\t\t\t}\r\n\t\t\treturn d\r\n\t\t}))\r\n\t}\r\n\t\r\n\tconst deletedata = (index) =>{\r\n\t\tsetData(data.filter((d, _index) => !(index === _index)))\r\n\t}\r\n\r\n\tconsole.log('data',data);\r\n\treturn (\r\n\t\t<div className=\"list-wrapper\">\r\n\t\t\t{\r\n\t\t\t\tdata.map((item, index)=> {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t  onClick={() => finishtodo(index)}\r\n\t\t\t\t\t\t\tclassName={item.isComplete ? 'list-through' : 'list'}\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.text}\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t  onClick={(e) => {\r\n\t\t\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\t\t\tdeletedata(index)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName='remove'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default List\r\n","import {useState} from 'react'\r\nimport Edit from './components/Edit'\r\nimport List from './components/List'\r\nimport './style.css'\r\n\r\nconst Todolist = () =>{\r\n  const [data , setData ] = useState([])\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <Edit setData={setData}/>\r\n      { // TODO tip 1\r\n        data.length > 0 &&\r\n        <List\r\n          data={data}\r\n          setData={setData}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todolist\r\n","import './App.css';\nimport Todolist from './components/todolist/Todolist.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todolist/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}